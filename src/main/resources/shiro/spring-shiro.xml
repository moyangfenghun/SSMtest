<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>

	<!-- Shiro Filter此处的名字必须和web.xml中filter相同 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/index" />
		<!-- unauthorizedUrl登录后没有权限时跳转的页面 -->
		<property name="unauthorizedUrl" value="/index" />
		<!-- 自定义拦截器 <property name="filters"> <map> <entry key="outdate" value-ref="sessionOutDateFilter" 
			/> </map> </property> -->
		<property name="filterChainDefinitions">
			<!-- 大致配置路径1:静态资源2异常或者错误页面3特殊页面4公共页面 anon默认拦截器的一种,允许页面匿名访问 -->
			<value>
				<!-- 静态资源 -->
				/static/**=anon
				/Plug/**=anon
				<!-- 系统 -->
				/error/**=anon
				/druid/**=anon
				<!-- 公共 -->
				/index = anon
				/login/* = anon
				/** = anon
			</value>
		</property>
	</bean>
	<!-- 控制Fileter的启用或者禁用 ,将其添加到fileters中可以覆盖配置 <bean id="SslFilter" class="org.apache.shiro.web.filter.authz.SslFilter"> 
		<property name="enabled" value="false"></property> </bean> -->
	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
		<property name="cacheManager" ref="shiroCacheManager" />
		<property name="sessionManager" ref="sessionManager"></property>
		<!-- 记住我cookie -->
		<property name="rememberMeManager" ref="rememberMeManager"></property>
	</bean>
	<bean id="myRealm" class="ssm.test.service.serviceImpl.MyShiroRealmServiceImpl">
		<property name="credentialsMatcher" ref="credentialsMatcher"></property>
	</bean>
	<!-- 注入缓存管理器 -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean>
	<bean id="ehCacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:shiro/shiro-ehcache.xml" />
		<property name="shared" value="true"></property>
	</bean>
	<!-- 会话管理配置 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 禁止sessionID显示在url -->
		<property name="sessionIdUrlRewritingEnabled" value="false"></property>
		<!-- session的失效时长，单位毫秒 -->
		<property name="globalSessionTimeout" value="600000" />
		<!-- 删除失效的session -->
		<property name="deleteInvalidSessions" value="true" />
		<!-- <property name="sessionIdCookie"></property> -->
	</bean>
	<!-- rememberMe -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberCookie"></property>
	</bean>
	<bean id="rememberCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- 以秒为单位 -->
		<property name="maxAge" value="1800000"></property>
		<property name="path" value="/"></property>
		<property name="name" value="rememberMe" />
		<!-- 浏览器中通过document.cookie可以获取cookie属性，设置了HttpOnly=true,在脚本中就不能的到cookie，可以避免cookie被盗用 -->
		<property name="httpOnly" value="true" />
	</bean>

	<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
	<bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- 设置Cookie名字, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID, 
			当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
		<property name="name" value="SHIRO-COOKIE" />
		<!-- JSESSIONID的path为/用于多个系统共享JSESSIONID -->
		<!-- <property name="path" value="/"/> -->
		<!-- 浏览器中通过document.cookie可以获取cookie属性，设置了HttpOnly=true,在脚本中就不能的到cookie，可以避免cookie被盗用 -->
		<property name="httpOnly" value="true" />
	</bean>
	<!-- 加密方式 -->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<!-- 加密算法为MD5 -->
		<property name="hashAlgorithmName" value="MD5"></property>
		<!-- 加密次数 -->
		<property name="hashIterations" value="1"></property>
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 <bean id="lifecycleBeanPostProcessor" 
		class="org.apache.shiro.spring.LifecycleBeanPostProcessor" /> -->
	<!-- AOP式方法级权限检查，启用注解方式必须配置lifecycleBeanPostProcessor <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" 
		depends-on="lifecycleBeanPostProcessor"> <property name="proxyTargetClass" 
		value="true" /> </bean> -->
	<!-- <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"> 
		<property name="securityManager" ref="securityManager" /> </bean> -->

</beans>